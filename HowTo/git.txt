neuen lokalen branch anlegen:
=============================
git checkout -b branches/TEST

mit remote branch verknüpfen:
=============================
git branch --set-upstream-to=origin/<branch> branches/TEST
...detaching:
git branch --unset-upstream

branch nach remote pushen (inkl. tracking):
=============================
git push -u origin branches/TEST
...oder mit anderem Namen:
git push -u origin branches/TEST:branches/NEW_NAME

branch mergen:
=============================
git checkout myBranch
git merge master

oder rebasen (besser, keine zusätzlichen merge commits):
=============================
git checkout myBranch
git rebase master
...danach zurückmergen in master:
git checkout master
git merge myBranch --> fast-forward merge, keine zusätzlichen commits enthalten

branch löschen
=============================
git branch -d BRANCH_NAME
... remote branch löschen
git push origin --delete BRANCH_NAME

branch umbenennen
=============================
git branch -m new-name						# Rename branch locally
git push origin :old_branch					# Delete the old branch
git push --set-upstream origin new_branch	# Push the new branch, set local branch to track the new remote
-- oder wenn anderer branch ausgecheckt:
git branch -m old-name new-name
git push origin :old-name new-name
git push origin -u new-name

auf welchem branch bin ich?
=============================
git status
...oder
git remote show origin

welche branches sind gemerged/nicht gemerged?
=============================
git branch --merged
git branch --no-merged
... oder auch anderen als den aktuellen branch bezogen:
git branch --merged OTHER_BRANCH
git branch --no-merged OTHER_BRANCH
-- oder über remote branches:
git branch -r --no-merged origin/<BRANCH_OF_INTEREST>

lokales cleanup von allen remote removed branches
=============================
git remote prune origin
