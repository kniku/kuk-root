<!-- 
= Template und Dokumentation zur Verwendung des log4net Logging Frameworks
= Verwendung:
 (0) Im Projekt Verweis auf log4net dazugeben (oder einfach nuget Paket installieren)
 (1) Dieses Template ins binary Verzeichnis als "logging.config" kopieren und ggf. anpassen
	oder besser: In die sourcen kopieren, ins Projekt aufnehmen und bei den Eigenschafte angeben,
	dass die Datei beim build ins Ausgabeverzeichnis kopiert werden soll.
 (2) Im Code irgendwo ganz auszerhalb von namespace und Klassen einfuegen:
	[assembly: log4net.Config.XmlConfigurator(ConfigFile = "logging.config", Watch = true)]
 (3) In Klassen, wo geloggt werden soll, folgende Zeile einfuegen:
 	private static readonly log4net.ILog Log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
 (4) Danach loggen etwa mit:
	Log.Info("blabla...");
 -->
 
 <configuration>

	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
	</configSections>

	<log4net>
	
		<root>
			<level value="ALL"/>
			<appender-ref ref="RollingFileAppender_size"/>
		</root>
	
		<appender name="FileAppender" type="log4net.Appender.FileAppender">
			<file value="logfile.txt" />
			<appendToFile value="true" />
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %level %logger - %message%newline" />
			</layout>
	<!-- 		<filter type="log4net.Filter.LevelRangeFilter">
				<levelMin value="INFO" />
				<levelMax value="FATAL" />
			</filter>
	 -->	
		</appender>		
		
		<!-- Rolling file appender: roll on date -->
		<appender name="RollingFileAppender_day" type="log4net.Appender.RollingFileAppender">
			<file value="logs/logfile.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Date" />
			<maxSizeRollBackups value="30" />
			<datePattern value="yyyyMMdd" /> <!-- roll every day, pattern=yyyyMMdd-HHmm ... -->
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>	

		<!-- Rolling file appender: roll on size -->
		<appender name="RollingFileAppender_size" type="log4net.Appender.RollingFileAppender">
			<file value="logs/logfile.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="10MB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>
		
		<!-- schreibt farbig ins Ausgabefenster beim debuggen! -->
		<!-- Farben; Blue,Green,Red,White,Yellow,Purple,Cyan - alles auch mit ...,HighIntensity -->
		<appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
			<mapping>
				<level value="FATAL" />
				<foreColor value="Yellow, HighIntensity" />
				<backColor value="Red" />
			</mapping>
			<mapping>
				<level value="ERROR" />
				<foreColor value="Red, HighIntensity" />
			</mapping>
			<mapping>
				<level value="WARN" />
				<foreColor value="Blue, HighIntensity" />
			</mapping>
			<mapping>
				<level value="INFO" />
				<foreColor value="White, HighIntensity" />
			</mapping>
			<mapping>
				<level value="DEBUG" />
				<foreColor value="White" />
			</mapping>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>		

		<!-- schreibt farbig ins Ausgabefenster beim debuggen! -->
		<!-- Farben; Black,Blue,Green,Red,White,Yellow,Purple,Cyan,Gray - alles auch mit Dark... -->
		<appender name="ManagedColoredConsoleAppender" type="log4net.Appender.ManagedColoredConsoleAppender">
			<mapping>
				<level value="FATAL" />
				<foreColor value="Yellow" />
				<backColor value="Red" />
			</mapping>
			<mapping>
				<level value="ERROR" />
				<foreColor value="Red" />
			</mapping>
			<mapping>
				<level value="WARN" />
				<foreColor value="DarkBlue" />
			</mapping>
			<mapping>
				<level value="INFO" />
				<foreColor value="White" />
			</mapping>
			<mapping>
				<level value="DEBUG" />
				<foreColor value="Gray" />
			</mapping>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>		
		
		 <!-- schreibt ins Ausgabefenster beim debuggen! -->
		<appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date{ABSOLUTE} [%thread] %level %logger - %message%newline"/>
			</layout>
<!-- 			<filter type="log4net.Filter.StringMatchFilter">
				<stringToMatch value="test" />
			</filter> -->
			<!-- <filter type="log4net.Filter.DenyAllFilter" /> -->
		</appender>		

		<!-- UDP Appender -->
		<appender name="UdpAppender" type="log4net.Appender.UdpAppender">
			<encoding value="utf-8" />
			<remoteAddress value="127.0.0.1" />
			<remotePort value="8888" />
			<layout type="log4net.Layout.PatternLayout" value="%-5level %logger [%ndc] - %message%newline" />
		</appender>
	
<!-- 		<logger>
		  <level />
		  <appender-ref />
		</logger>
 -->
	</log4net>
</configuration>